services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    env_file:
      - frontend.env
    depends_on:
      - backend
    container_name: frontend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - variables.env
    depends_on:
      database:
        condition: service_healthy
    container_name: backend
  
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - variables.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: database

  tests:
    build:
      context: ./tests
      dockerfile: Dockerfile
    volumes:
      - ./tests:/usr/src/app/tests
      - ./tests/resources:/usr/src/app/resources
      - ./results:/usr/src/app/results
    env_file:
      - variables.env
    environment:
      - SELENIUM_WEBDRIVER_CHROMEDRIVER_PATH=/usr/local/bin/chromedriver/chromedriver
      - CHROME_BIN=/usr/bin/chromium-browser
    depends_on:
      - frontend
      - backend
      - database
    container_name: tests

volumes:
  postgres_data: